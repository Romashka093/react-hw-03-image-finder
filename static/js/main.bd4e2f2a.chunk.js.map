{"version":3,"sources":["searchbar/imageGallery/imageGalleryItem/ImageGalleryItem.module.css","searchbar/modal/Modal.module.css","searchbar/imageGallery/ImageGallery.module.css","searchbar/button/Button.module.css","searchbar/loader/CustomLoader.module.css","searchbar/Searchbar.module.css","services/images-api.js","searchbar/imageGallery/imageGalleryItem/ImageGalleryItem.js","searchbar/modal/Modal.js","searchbar/imageGallery/ImageGallery.js","searchbar/button/Button.js","searchbar/Searchbar.js","searchbar/errorNotification/ErrorNotification.js","searchbar/loader/CustomLoader.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchImages","searchQuery","pageNumber","get","process","ImageGalleryItem","id","src","alt","onOpenModal","key","onClick","className","css","ImageGalleryItemImage","Modal","onCloseModal","modalImages","handleKeyPress","evt","target","nodeName","Overlay","largeImageURL","ImageGallery","state","isModalOpen","code","handleBackdropClick","Number","props","images","filter","image","setState","window","addEventListener","this","removeEventListener","map","tags","webformatURL","Component","Button","handleClickButton","Searchbar","handleChange","value","handleSubmit","preventDefault","onSubmit","prevProps","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","updateQuery","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","length","ErrorNotification","text","CustomLoader","Loader","color","height","width","timeout","initialState","isLoading","error","query","App","getImages","a","imagesAPI","takeImages","data","hits","console","log","message","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bd4e2f2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2K5GD\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1jmaW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__IO326\",\"Modal\":\"Modal_Modal__7mS0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1tgtH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2k2wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"CustomLoader_Loader__1fwHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2miQO\",\"SearchForm\":\"Searchbar_SearchForm__2TFRQ\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1HiJs\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2cktd\",\"SearchFormInput\":\"Searchbar_SearchFormInput__63gCq\"};","import axios from 'axios';\naxios.defaults.baseURL = 'https://pixabay.com/api';\n\nexport const fetchImages = (searchQuery, pageNumber) =>\n  axios.get(\n    `/?q=${searchQuery}&page=${pageNumber}&key=${process.env.REACT_APP_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n","import React from 'react';\nimport css from './ImageGalleryItem.module.css';\n\nexport function ImageGalleryItem({ id, src, alt, onOpenModal }) {\n  return (\n    <>\n      <li key={id} onClick={onOpenModal} className={css.ImageGalleryItem}>\n        <img\n          id={id}\n          src={src}\n          alt={alt}\n          className={css.ImageGalleryItemImage}\n        />\n      </li>\n    </>\n  );\n}\n","import React from 'react';\nimport css from './Modal.module.css';\n\nexport function Modal({ onCloseModal, modalImages, handleKeyPress }) {\n  return (\n    <>\n      <div\n        onClick={evt => {\n          if (evt.target.nodeName !== 'IMG') {\n            onCloseModal();\n          }\n        }}\n        className={css.Overlay}\n      >\n        <div className={css.Modal} onClick={handleKeyPress}>\n          <img src={modalImages.largeImageURL} alt=\"\" />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { Component } from 'react';\nimport { ImageGalleryItem } from './imageGalleryItem/ImageGalleryItem.js';\nimport { Modal } from './../modal/Modal';\nimport css from './ImageGallery.module.css';\n\nexport class ImageGallery extends Component {\n  state = {\n    isModalOpen: false,\n    modalImages: [],\n  };\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUpdate() {\n    this.state.isModalOpen\n      ? window.removeEventListener('keydown', this.handleKeyPress)\n      : window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = evt => {\n    if (evt.code !== 'Escape') {\n      return;\n    } else {\n      this.onCloseModal();\n    }\n  };\n\n  handleBackdropClick = evt => {\n    if (Number(evt.target.id) !== Number(this.state.modalImages.id)) {\n      return;\n    }\n    this.onCloseModal();\n  };\n\n  onOpenModal = evt => {\n    const { images } = this.props;\n    const [modalImages] = images.filter(\n      image => image.id === Number(evt.target.id),\n    );\n    this.setState({ isModalOpen: true, modalImages });\n  };\n\n  onCloseModal = () => {\n    this.setState({ isModalOpen: false });\n  };\n  render() {\n    const { images } = this.props;\n    const { isModalOpen, modalImages } = this.state;\n    return (\n      <>\n        {isModalOpen && (\n          <Modal\n            modalImages={modalImages}\n            onCloseModal={this.onCloseModal}\n            handleKeyPress={this.handleKeyPress}\n          />\n        )}\n        <ul className={css.ImageGallery}>\n          {images.map(image => (\n            <ImageGalleryItem\n              handleBackdropClick={this.handleBackdropClick}\n              alt={image.tags}\n              src={image.webformatURL}\n              id={image.id}\n              key={image.id}\n              onOpenModal={this.onOpenModal}\n            />\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport css from './Button.module.css';\n\nexport function Button({ handleClickButton }) {\n  return (\n    <>\n      <button onClick={handleClickButton} className={css.Button}>\n        Load more\n      </button>\n    </>\n  );\n}\n","import React, { Component } from 'react';\nimport { ImageGallery } from './imageGallery/ImageGallery';\nimport { Button } from './button/Button';\nimport css from './Searchbar.module.css';\n\nexport class Searchbar extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.pageNumber > 2) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  handleChange = evt => {\n    this.setState({\n      searchQuery: evt.target.value,\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    this.props.onSubmit(this.state.searchQuery);\n  };\n\n  handleClickButton = () => {\n    this.props.onSubmit(this.state.searchQuery, this.props.pageNumber);\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    const { images, updateQuery } = this.props;\n    return (\n      <>\n        <header className={css.Searchbar}>\n          <form onSubmit={this.handleSubmit} className={css.SearchForm}>\n            <button type=\"submit\" className={css.SearchFormButton}>\n              <span className={css.SearchFormButtonLabel}>Search</span>\n            </button>\n\n            <input\n              className={css.SearchFormInput}\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              value={searchQuery}\n              onChange={this.handleChange}\n              onClick={() => {\n                updateQuery(searchQuery);\n              }}\n            />\n          </form>\n        </header>\n        {images.length > 0 && <ImageGallery images={images} />}\n        {images.length > 11 && (\n          <Button handleClickButton={this.handleClickButton} />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nexport function ErrorNotification({ text }) {\n  return <h2>Woooooops! Somethink went wrong: {text}!</h2>;\n}\n","import React from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport css from './CustomLoader.module.css';\n\nexport function CustomLoader() {\n  return (\n    <>\n      <Loader\n        className={css.Loader}\n        type=\"ThreeDots\"\n        color=\"#3f51b5\"\n        height={300}\n        width={300}\n        timeout={5000}\n      />\n    </>\n  );\n}\n","import React, { Component } from 'react';\nimport * as imagesAPI from './services/images-api.js';\nimport { Searchbar } from './searchbar/Searchbar';\nimport { ErrorNotification } from './searchbar/errorNotification/ErrorNotification';\nimport { CustomLoader } from './searchbar/loader/CustomLoader';\nimport css from './App.css';\n\nconst initialState = {\n  images: [],\n  isLoading: false,\n  error: null,\n  pageNumber: 1,\n  query: '',\n};\n\nexport class App extends Component {\n  state = {\n    ...initialState,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.pageNumber !== this.state.pageNumber ||\n      prevState.query !== this.state.query\n    ) {\n      if (prevState.query !== this.state.query) {\n        this.setState({\n          images: [],\n          pageNumber: 1,\n        });\n      }\n      this.setState({ isLoading: true });\n    }\n  }\n\n  updateQuery = value => {\n    this.setState({\n      query: value,\n    });\n  };\n\n  getImages = async searchQuery => {\n    this.setState({ isLoading: true });\n    try {\n      const takeImages = await imagesAPI.fetchImages(\n        searchQuery,\n        this.state.pageNumber,\n      );\n\n      this.setState(prevState => ({\n        images: [...prevState.images, ...takeImages.data.hits],\n        pageNumber: prevState.pageNumber + 1,\n      }));\n    } catch (error) {\n      console.log(error);\n      this.setState({ error });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  render() {\n    const { images, isLoading, error, pageNumber } = this.state;\n    return (\n      <div className={css.App}>\n        <Searchbar\n          initialState={initialState}\n          onSubmit={this.getImages}\n          images={images}\n          pageNumber={pageNumber}\n          updateQuery={this.updateQuery}\n        />\n        {error && <ErrorNotification text={error.message} />}\n        {isLoading && <CustomLoader />}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}